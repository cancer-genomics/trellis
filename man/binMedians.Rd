% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preprocess-utils.R
\name{binMedians}
\alias{binMedians}
\title{Computes a median normalized coverage across samples for each bin.}
\usage{
binMedians(files, nchunks = 50)
}
\arguments{
\item{files}{character string of bamfile paths}

\item{nchunks}{The matrix of normalized coverage is potentially a very large matrix (bins x number samples).  To reduce the required RAM, we can read subsets of this matrix.  nchunks is an integer specifying how many subsets of the matrix are derived. Increasing the value of this parameter reduces the required RAM at the expense of increased computational time.}
}
\description{
This funciton is helpful for reducing bin-to-bin variation in normalized
coverage that is often correlated between samples.
}
\examples{
library(Rsamtools)
library(svbams)
library(svfilters.hg19)
data(bins, package="svbams")
bins <- head(bins, 100)
extdir <- system.file("extdata", package="svbams", mustWork=TRUE)
bamfile <- file.path(extdir, "cgov10t.bam")
## Let's pretend we have 20 BAM files
bamfiles <- rep(bamfile, 20)
tempfiles <- replicate(length(bamfiles), tempfile())
for(i in seq_along(bamfiles)){
  bviews <- BamViews(bamRanges=bins, bamPaths=bamfiles[i])
  bins$cnt <- binCounts(bviews)
  std_cnt <- binNormalize(bins)
  bins$std_cnt <- std_cnt
  gc.adj <- binGCCorrect(bins)
  gc.adj.int <- as.integer(round(gc.adj*1000, 0))
  saveRDS(gc.adj.int, file=tempfiles[i])
}
binMedians(tempfiles, nchunks=1)
}
